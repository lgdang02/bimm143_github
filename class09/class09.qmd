---
title: "Class 9: Halloween Mini Project"
author: "Linh Dang (PID: A16897764)"
format: pdf
toc: true
---

Today we will take a wee step back to some data we can taste and explore the correlation structure and principal components of some Halloween candy.


### Data import

```{r}
candy_file <- "candy-data.csv"

candy = read.csv(candy_file, row.names=1)
head(candy)
```

> Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```

> Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```

## What is your favorite candy?

```{r}
candy["Twix",]$winpercent
```

> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

My favorite candy is Twix with a winpercent of 81.6%.

> Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat",]$winpercent
```

> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars",]$winpercent
```

## Exploratory Analysis

We can use the **skimr** package to get a quick overview of a given dataset. This can be useful for the first time you encounter a new dataset.

```{r}
skimr::skim(candy)
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

It looks like the last column `candy$winpercent` is on a different scale to all others.

> Q7. What do you think a zero and one represent for the candy$chocolate column?

A zero means that candy has chocolate while one means that the candy has no chocolate in it.

> Q8. Plot a histogram of winpercent values

```{r}
hist(candy$winpercent, breaks = 30)
```

```{r}
library(ggplot2)

ggplot(candy) +
  aes(winpercent) +
  geom_histogram(bins = 10, fill="lightblue")
```

> Q9. Is the distribution of winpercent values symmetrical?

The distribution of winpercent values is not symmetrical.

> Q10. Is the center of the distribution above or below 50%?

```{r}
summary(candy$winpercent)
```
The center of the distribution is below 50% because median is 47.83.

> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

```{r}
choc.inds <- candy$chocolate == 1
choc.candy <- candy[ choc.inds, ]
choc.win <- choc.candy$winpercent
mean(choc.win)
```

```{r}
fruit.win <- candy[ as.logical(candy$fruity), ]$winpercent
mean(fruit.win)
```

On average, chocolate candy is higher than fruit candy.

> Q12. Is this difference statistically significant?

```{r}
ans <- t.test(choc.win, fruit.win)
ans
```
Yes, with a P-value of `r ans$p.value`.

## 3. Overall Candy Rankings

There are two related functions that can help here, on is the classic `sort()` and `order()`

```{r}
x <- c(5, 10, 1, 4)
sort(x)
```

```{r}
order(x)
```

> Q13. What are the five least liked candy types in this set?

```{r}
inds <- order( candy$winpercent )
head( candy[inds,], 5 )
```

> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
inds <- order( candy$winpercent, decreasing = T )
head( candy[inds,], 5 )
```

Make a bar plot with ggplot and order it by winpercent values.

```{r}
ggplot(candy) +
  aes(winpercent, rownames(candy)) +
  geom_col()
```

```{r}
ggplot(candy) +
  aes(winpercent, reorder( rownames(candy), winpercent )) +
  geom_col()
```

```{r}
ggplot(candy) +
  aes(winpercent, reorder( rownames(candy), winpercent )) +
  geom_col(fill="red")
```

```{r}
ggplot(candy) +
  aes(x=winpercent, y=reorder( rownames(candy), winpercent),
      fill=chocolate) +
  geom_col()
```

Here we want a custom color vector to color each bar the way we want - with `chocolate` and `fruity` candy together with wheter it is a bar or not

```{r}
mycols <- rep("gray", nrow(candy))
mycols[as.logical(candy$chocolate)] <- "chocolate"
mycols[as.logical(candy$fruity)] <- "pink"
mycols[as.logical(candy$bar)] <- "brown"

#mycols
ggplot(candy) +
  aes(winpercent, reorder( rownames(candy), winpercent )) +
  geom_col(fill=mycols)

ggsave("mybarplot.png", width=3, height=6)
```

![My silly barplot image](mybarplot.png)

## 4. Winpercent vs Pricepercent

```{r}
# Pink and gray is too light, let's change to red
library(ggrepel)
mycols <- rep("black", nrow(candy))
mycols[as.logical(candy$chocolate)] <- "chocolate"
mycols[as.logical(candy$fruity)] <- "red"
mycols[as.logical(candy$bar)] <- "brown"

# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=mycols) + 
  geom_text_repel(col=mycols, size=3.3, max.overlaps = 5)
```

## 5. Correlation Structure

```{r}
cij <- cor(candy)
cij
```

```{r}
library(corrplot)

corrplot(cij)
```


> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Chocolate and fruity are negatively correlated.

```{r}
cij["chocolate", "fruity"]
```

> Q23. Similarly, what two variables are most positively correlated?

Winpercent and chocolate are most positively correlated.

```{r}
cij["winpercent", "chocolate"]
```


## Principal Component Analysis (PCA)

We need to be sure to scale our input `candy` data before PCA as we have the `winpercent` column on a different scale to all others in the dataset.

```{r}
pca <- prcomp(candy, scale=T)
summary(pca)
```

First main result figure is my "PCA plot"

```{r}
#pca$x
ggplot(pca$x) +
  aes(PC1, PC2, label=rownames(pca$x)) +
  geom_point(col=mycols) +
  geom_text_repel(max.overlaps = 6, col=mycols) +
  theme_bw()
```

The second main PCA result is in the `pca$rotation` we can plot this to generate a so-called "loadings" plot.

```{r}
#pca$rotation
ggplot(pca$rotation) +
  aes(PC1, rownames(pca$rotation)) +
  geom_col()
```

```{r}
ggplot(pca$rotation) +
  aes(PC1, reorder(rownames(pca$rotation), PC1), fill=PC1) +
  geom_col()
```

> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Fruity, pluribus, and bar are originally picked up strongly by PC1 in the positive direction. These make sense to me.

