---
title: "Class 11: AlphaFold"
author: "Linh Dang (PID:A16897764)"
format: pdf
toc: true
---

# Custom analysis of resulting models

Here we read the results from AlphaFold and try to interpret all the models and quality score metrics:

```{r}
library(bio3d)

pth <- "dimer_23119/"
pdb.files <- list.files(path=pth, full.names = TRUE, pattern = ".pdb")
```

Align and superpose all these models
```{r}
file.exists(pdb.files)
```

```{r}
pdbs <- pdbaln(pdb.files, fit = TRUE, exefile="msa")
```

```{r}
library(bio3dview)

#view.pdbs(pdbs)
```

```{r}
# Read a reference PDB structure
pdb <- read.pdb("1hsg")
```


```{r}
plot(pdbs$b[1,], typ = "l", ylim=c(0,100), ylab="pLDDT score")
lines(pdbs$b[2,], typ = "l", col="blue")
lines(pdbs$b[3,], typ = "l", col="green")
lines(pdbs$b[4,], typ = "l", col="orange")
lines(pdbs$b[5,], typ = "l", col="red")
```

# Predicted Alignment Error for domains

```{r}
rd <- rmsd(pdbs)
rd
```

```{r}
library(jsonlite)

# Listing of all PAE JSON files
pae_files <- list.files(path=pth,
                        pattern=".*model.*\\.json",
                        full.names = TRUE)
pae_files
```

```{r}
pae1 <- read_json(pae_files[1],simplifyVector = TRUE)
pae5 <- read_json(pae_files[5],simplifyVector = TRUE)

attributes(pae1)
```

```{r}
plot.dmat(pae5$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```

```{r}
plot.dmat(pae1$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```

# Score Residue Conservation from alignment file

AlphaFold returns it's large elignment file used for analysis. Here we read this file and score conservation per position.

```{r}
aln_file <- list.files(path=pth,
                       pattern=".a3m$",
                        full.names = TRUE)
aln_file
```

Read the alignment file
```{r}
aln <- read.fasta(aln_file[1], to.upper = TRUE)
```

We can score residue conservation in the alignment with the conserv() function.

```{r}
sim <- conserv(aln)
```


```{r}
plotb3(sim[1:99], sse=trim.pdb(pdb, chain="A"),
       ylab="Conservation Score")
```

Find the consensus sequence at a very high cut-off to find invariant residues 

```{r}
con <- consensus(aln, cutoff = 0.9)
con$seq
```





